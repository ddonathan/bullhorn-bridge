name: Publish to npm on Release/Tag

on:
  release:
    types: [published]
  push:
    tags:
      - 'v*'
      - '[0-9]+.[0-9]+.[0-9]+'
  workflow_dispatch:
    inputs:
      tag:
        description: 'Tag to publish (vX.Y.Z or X.Y.Z)'
        required: false
        default: ''

concurrency:
  group: publish-${{ github.event_name }}-${{ github.ref || github.event.release.tag_name || inputs.tag }}
  cancel-in-progress: true

permissions:
  contents: read
  id-token: write
  packages: write

jobs:
  publish:
    name: Test, Build, and Publish
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Use Node.js LTS
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          registry-url: 'https://registry.npmjs.org'

      - name: Install dependencies (clean)
        run: npm ci

      - name: Determine tag and package version
        id: vars
        shell: bash
        run: |
          if [ "${{ github.event_name }}" = "release" ]; then
            TAG="${{ github.event.release.tag_name }}"
          elif [ "${{ github.event_name }}" = "push" ]; then
            TAG="$GITHUB_REF_NAME"
          else
            TAG="${{ inputs.tag }}"
          fi
          PKG=$(node -p "require('./package.json').version")
          echo "tag=$TAG" >> $GITHUB_OUTPUT
          echo "pkg=$PKG" >> $GITHUB_OUTPUT
          echo "Detected tag: $TAG | package.json: $PKG"

      - name: Verify tag matches package.json version
        shell: bash
        run: |
          TAG='${{ steps.vars.outputs.tag }}'
          PKG='${{ steps.vars.outputs.pkg }}'
          if [ -z "$TAG" ]; then
            echo "No tag provided or detected. Provide input 'tag' when running manually." >&2
            exit 1
          fi
          if [ "$TAG" != "v$PKG" ] && [ "$TAG" != "$PKG" ]; then
            echo "Release tag must match package.json version (v$PKG or $PKG)." >&2
            exit 1
          fi

      - name: Run tests
        run: npm test --silent

      - name: Build
        run: npm run build:simple --silent

      - name: Publish to npm
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
        run: |
          npm publish --provenance --access public
